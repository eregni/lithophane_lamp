// Look up tables for individual color gamma correction

/*
Sources:
https://hackaday.com/2016/08/23/rgb-leds-how-to-master-gamma-and-hue-for-perfect-brightness/
https://learn.adafruit.com/led-tricks-gamma-correction/the-quick-fix
https://github.com/FastLED/FastLED/blob/dcbf39933f51a2a0e4dfa0a2b3af4f50040df5c9/color.h
https://github.com/technosf/ESPxRGB
*/

/*
    // Generate an LED gamma-correction table for Arduino sketches.
    // Written in Processing (www.processing.org), NOT for Arduino!
    // Copy-and-paste the program's output into an Arduino sketch.
     
    float gamma   = 1.8; // Correction factor
    int   max_in  = 255, // Top end of INPUT range
          red_max_out = 255, // Top end of OUTPUT range
          green_max_out = 176,
          blue_max_out = 240;
          
    void setup() {
      print("const PROGMEM uint8_t RED[] = {");
        for(int i=0; i<=max_in; i++) {
          if(i > 0) print(',');
          if((i & 15) == 0) print("\n  ");
          System.out.format("%3d",
            (int)(pow((float)i / (float)max_in, gamma) * red_max_out + 0.5));
        }
      println(" };\n");
      
      print("const PROGMEM uint8_t GREEN[] = {");
        for(int i=0; i<=max_in; i++) {
          if(i > 0) print(',');
          if((i & 15) == 0) print("\n  ");
          System.out.format("%3d",
            (int)(pow((float)i / (float)max_in, gamma) * green_max_out + 0.5));
        }
      println(" };\n");
      
      print("const PROGMEM uint8_t BLUE[] ={");
        for(int i=0; i<=max_in; i++) {
          if(i > 0) print(',');
          if((i & 15) == 0) print("\n  ");
          System.out.format("%3d",
            (int)(pow((float)i / (float)max_in, gamma) * blue_max_out + 0.5));
        }
      println(" };\n");
      exit();
    }
*/

// To 'flatten' the brightness between the color (i.e. less green etc.) I've used the temperature settings
// from the fastled library
// ---> TypicalSMD5050=0xFFB0F0 /* 255, 176, 240 */

// other settings:
// Candle=0xFF9329 /* 1900 K, 255, 147, 41 */,
//    /// 2600 Kelvin
//    Tungsten40W=0xFFC58F /* 2600 K, 255, 197, 143 */,
//    /// 2850 Kelvin
//    Tungsten100W=0xFFD6AA /* 2850 K, 255, 214, 170 */,
//    /// 3200 Kelvin
//    Halogen=0xFFF1E0 /* 3200 K, 255, 241, 224 */,
//    /// 5200 Kelvin
//    CarbonArc=0xFFFAF4 /* 5200 K, 255, 250, 244 */,
//    /// 5400 Kelvin
//    HighNoonSun=0xFFFFFB /* 5400 K, 255, 255, 251 */,
//    /// 6000 Kelvin
//    DirectSunlight=0xFFFFFF /* 6000 K, 255, 255, 255 */,
//    /// 7000 Kelvin
//    OvercastSky=0xC9E2FF /* 7000 K, 201, 226, 255 */,
//    /// 20000 Kelvin
//    ClearBlueSky=0x409CFF /* 20000 K, 64, 156, 255 */,


namespace gamma_correction_LUT {

// 1.8 gamma correction factor
const PROGMEM uint8_t RED[] = {
    0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,  2,
    2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  6,
    6,  6,  7,  7,  8,  8,  8,  9,  9, 10, 10, 10, 11, 11, 12, 12,
   13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 21,
   21, 22, 22, 23, 24, 24, 25, 26, 26, 27, 28, 28, 29, 30, 30, 31,
   32, 32, 33, 34, 35, 35, 36, 37, 38, 38, 39, 40, 41, 41, 42, 43,
   44, 45, 46, 46, 47, 48, 49, 50, 51, 52, 53, 53, 54, 55, 56, 57,
   58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73,
   74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90,
   91, 92, 93, 95, 96, 97, 98, 99,100,102,103,104,105,107,108,109,
  110,111,113,114,115,116,118,119,120,122,123,124,126,127,128,129,
  131,132,134,135,136,138,139,140,142,143,145,146,147,149,150,152,
  153,154,156,157,159,160,162,163,165,166,168,169,171,172,174,175,
  177,178,180,181,183,184,186,188,189,191,192,194,195,197,199,200,
  202,204,205,207,208,210,212,213,215,217,218,220,222,224,225,227,
  229,230,232,234,236,237,239,241,243,244,246,248,250,251,253,255 };

const PROGMEM uint8_t GREEN[] = {
    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,
    1,  1,  1,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  4,  4,  4,
    4,  4,  5,  5,  5,  5,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,
    9,  9,  9, 10, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14,
   15, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 19, 20, 20, 21, 21,
   22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 28, 28, 29, 29, 30,
   30, 31, 31, 32, 33, 33, 34, 34, 35, 36, 36, 37, 37, 38, 39, 39,
   40, 41, 41, 42, 43, 43, 44, 45, 45, 46, 47, 47, 48, 49, 49, 50,
   51, 52, 52, 53, 54, 55, 55, 56, 57, 58, 58, 59, 60, 61, 61, 62,
   63, 64, 65, 65, 66, 67, 68, 69, 69, 70, 71, 72, 73, 74, 74, 75,
   76, 77, 78, 79, 80, 80, 81, 82, 83, 84, 85, 86, 87, 88, 88, 89,
   90, 91, 92, 93, 94, 95, 96, 97, 98, 99,100,101,102,103,104,105,
  106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,
  122,123,124,125,126,127,128,129,131,132,133,134,135,136,137,138,
  139,140,142,143,144,145,146,147,148,150,151,152,153,154,155,157,
  158,159,160,161,163,164,165,166,167,169,170,171,172,174,175,176 };

const PROGMEM uint8_t BLUE[] ={
    0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,  1,  1,  1,
    2,  2,  2,  2,  2,  3,  3,  3,  3,  4,  4,  4,  5,  5,  5,  5,
    6,  6,  6,  7,  7,  7,  8,  8,  9,  9,  9, 10, 10, 11, 11, 11,
   12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19,
   20, 20, 21, 22, 22, 23, 23, 24, 25, 25, 26, 27, 27, 28, 28, 29,
   30, 30, 31, 32, 33, 33, 34, 35, 35, 36, 37, 38, 38, 39, 40, 41,
   41, 42, 43, 44, 45, 45, 46, 47, 48, 49, 49, 50, 51, 52, 53, 54,
   55, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 67, 68,
   69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85,
   86, 87, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99,100,101,103,
  104,105,106,107,108,110,111,112,113,114,116,117,118,119,121,122,
  123,124,126,127,128,129,131,132,133,135,136,137,139,140,141,143,
  144,145,147,148,149,151,152,154,155,156,158,159,161,162,163,165,
  166,168,169,171,172,174,175,177,178,180,181,182,184,186,187,189,
  190,192,193,195,196,198,199,201,202,204,206,207,209,210,212,214,
  215,217,218,220,222,223,225,227,228,230,232,233,235,237,238,240 };


//2.2 gamma correction factor
// const PROGMEM uint8_t RED[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
//     3,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  5,  6,  6,  6,
//     6,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10, 10, 11, 11, 11, 12,
//    12, 13, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19,
//    20, 20, 21, 22, 22, 23, 23, 24, 25, 25, 26, 26, 27, 28, 28, 29,
//    30, 30, 31, 32, 33, 33, 34, 35, 35, 36const PROGMEM uint8_t RED[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
//     2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,
//     5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10,
//    10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 16, 16,
//    17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 24, 24, 25,
//    25, 26, 27, 27, 28, 29, 29, 30, 31, 32, 32, 33, 34, 35, 35, 36,
//    37, 38, 39, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 50,
//    51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68,
//    69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89,
//    90, 92, 93, 95, 96, 98, 99,101,102,104,105,107,109,110,112,114,
//   115,117,119,120,122,124,126,127,129,131,133,135,137,138,140,142,
//   144,146,148,150,152,154,156,158,160,162,164,167,169,171,173,175,
//   177,180,182,184,186,189,191,193,196,198,200,203,205,208,210,213,
//   215,218,220,223,225,228,231,233,236,239,241,244,247,249,252,255 };

// const PROGMEM uint8_t GREEN[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,
//     2,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  4,
//     4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7,
//     7,  7,  7,  8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10, 11, 11,
//    11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 17, 17,
//    18, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25,
//    26, 26, 27, 27, 28, 28, 29, 30, 30, 31, 32, 32, 33, 33, 34, 35,
//    36, 36, 37, 38, 38, 39, 40, 41, 41, 42, 43, 44, 44, 45, 46, 47,
//    48, 49, 49, 50, 51, 52, 53, 54, 55, 56, 57, 57, 58, 59, 60, 61,
//    62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78,
//    80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98,
//    99,101,102,104,105,106,108,109,111,112,113,115,116,118,119,121,
//   122,124,126,127,129,130,132,133,135,137,138,140,142,143,145,147,
//   149,150,152,154,156,157,159,161,163,165,167,168,170,172,174,176 };

// const PROGMEM uint8_t BLUE[] ={
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,
//     2,  2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,
//     5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  8,  8,  8,  8,  9,  9,
//     9, 10, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15,
//    16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 21, 21, 22, 22, 23, 23,
//    24, 25, 25, 26, 26, 27, 28, 28, 29, 30, 30, 31, 32, 33, 33, 34,
//    35, 36, 36, 37, 38, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48,
//    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64,
//    65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84,
//    85, 86, 88, 89, 91, 92, 93, 95, 96, 98, 99,101,102,104,105,107,
//   108,110,112,113,115,117,118,120,122,123,125,127,128,130,132,134,
//   136,138,139,141,143,145,147,149,151,153,155,157,159,161,163,165,
//   167,169,171,173,175,178,180,182,184,186,189,191,193,196,198,200,
//   203,205,207,210,212,215,217,220,222,225,227,230,232,235,237,240 };, 37, 38, 39, 39, 40, 41,
//    42, 43, 43, 44, 45, 46, 47, 48, 49, 49, 50, 51, 52, 53, 54, 55,
//    56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
//    73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 87, 88, 89, 90,
//    91, 93, 94, 95, 97, 98, 99,100,102,103,105,106,107,109,110,111,
//   113,114,116,117,119,120,121,123,124,126,127,129,130,132,133,135,
//   137,138,140,141,143,145,146,148,149,151,153,154,156,158,159,161,
//   163,165,166,168,170,172,173,175,177,179,181,182,184,186,188,190,
//   192,194,196,197,199,201,203,205,207,209,211,213,215,217,219,221,
//   223,225,227,229,231,234,236,238,240,242,244,246,248,251,253,255 };

//   const PROGMEM uint8_t GREEN[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,
//     2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,
//     4,  5,  5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,
//     8,  9,  9,  9, 10, 10, 10, 11, 11, 11, 12, 12, 12, 13, 13, 13,
//    14, 14, 15, 15, 15, 16, 16, 17, 17, 17, 18, 18, 19, 19, 20, 20,
//    21, 21, 21, 22, 22, 23, 23, 24, 24, 25, 26, 26, 27, 27, 28, 28,
//    29, 29, 30, 31, 31, 32, 32, 33, 34, 34, 35, 35, 36, 37, 37, 38,
//    39, 39, 40, 41, 41, 42, 43, 43, 44, 45, 46, 46, 47, 48, 49, 49,
//    50, 51, 52, 52, 53, 54, 55, 56, 56, 57, 58, 59, 60, 61, 61, 62,
//    63, 64, 65, 66, 67, 68, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
//    78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
//    94, 95, 96, 98, 99,100,101,102,103,104,105,107,108,109,110,111,
//   112,114,115,116,117,118,120,121,122,123,125,126,127,128,130,131,
//   132,134,135,136,138,139,140,142,143,144,146,147,148,150,151,153,
//   154,155,157,158,160,161,163,164,166,167,168,170,171,173,174,176 };

//   const PROGMEM uint8_t BLUE[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,
//     2,  3,  3,  3,  3,  3,  4,  4,  4,  4,  5,  5,  5,  5,  6,  6,
//     6,  6,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10, 10, 10, 11, 11,
//    11, 12, 12, 13, 13, 14, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18,
//    19, 19, 20, 20, 21, 21, 22, 23, 23, 24, 24, 25, 25, 26, 27, 27,
//    28, 29, 29, 30, 31, 31, 32, 33, 33, 34, 35, 36, 36, 37, 38, 39,
//    39, 40, 41, 42, 42, 43, 44, 45, 46, 47, 47, 48, 49, 50, 51, 52,
//    53, 54, 55, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67,
//    68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85,
//    86, 87, 88, 90, 91, 92, 93, 95, 96, 97, 98,100,101,102,104,105,
//   106,107,109,110,112,113,114,116,117,118,120,121,123,124,126,127,
//   129,130,132,133,135,136,138,139,141,142,144,145,147,148,150,152,
//   153,155,157,158,160,162,163,165,167,168,170,172,173,175,177,179,
//   180,182,184,186,188,189,191,193,195,197,199,201,202,204,206,208,
//   210,212,214,216,218,220,222,224,226,228,230,232,234,236,238,240 };

//2.8 gamma correction factor
// const PROGMEM uint8_t RED[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
//     2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,
//     5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10,
//    10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 16, 16,
//    17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 24, 24, 25,
//    25, 26, 27, 27, 28, 29, 29, 30, 31, 32, 32, 33, 34, 35, 35, 36,
//    37, 38, 39, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 50,
//    51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68,
//    69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89,
//    90, 92, 93, 95, 96, 98, 99,101,102,104,105,107,109,110,112,114,
//   115,117,119,120,122,124,126,127,129,131,133,135,137,138,140,142,
//   144,146,148,150,152,154,156,158,160,162,164,167,169,171,173,175,
//   177,180,182,184,186,189,191,193,196,198,200,203,205,208,210,213,
//   215,218,220,223,225,228,231,233,236,239,241,244,247,249,252,255 };

// const PROGMEM uint8_t GREEN[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,
//     2,  2,  2,  2,  2,  2,  2,  2,  3,  3,  3,  3,  3,  3,  3,  4,
//     4,  4,  4,  4,  4,  5,  5,  5,  5,  5,  6,  6,  6,  6,  6,  7,
//     7,  7,  7,  8,  8,  8,  8,  9,  9,  9, 10, 10, 10, 10, 11, 11,
//    11, 12, 12, 12, 13, 13, 14, 14, 14, 15, 15, 15, 16, 16, 17, 17,
//    18, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25,
//    26, 26, 27, 27, 28, 28, 29, 30, 30, 31, 32, 32, 33, 33, 34, 35,
//    36, 36, 37, 38, 38, 39, 40, 41, 41, 42, 43, 44, 44, 45, 46, 47,
//    48, 49, 49, 50, 51, 52, 53, 54, 55, 56, 57, 57, 58, 59, 60, 61,
//    62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78,
//    80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 96, 97, 98,
//    99,101,102,104,105,106,108,109,111,112,113,115,116,118,119,121,
//   122,124,126,127,129,130,132,133,135,137,138,140,142,143,145,147,
//   149,150,152,154,156,157,159,161,163,165,167,168,170,172,174,176 };

// const PROGMEM uint8_t BLUE[] ={
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,
//     2,  2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,
//     5,  5,  5,  6,  6,  6,  6,  7,  7,  7,  8,  8,  8,  8,  9,  9,
//     9, 10, 10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15,
//    16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 21, 21, 22, 22, 23, 23,
//    24, 25, 25, 26, 26, 27, 28, 28, 29, 30, 30, 31, 32, 33, 33, 34,
//    35, 36, 36, 37, 38, 39, 40, 40, 41, 42, 43, 44, 45, 46, 47, 48,
//    48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64,
//    65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84,
//    85, 86, 88, 89, 91, 92, 93, 95, 96, 98, 99,101,102,104,105,107,
//   108,110,112,113,115,117,118,120,122,123,125,127,128,130,132,134,
//   136,138,139,141,143,145,147,149,151,153,155,157,159,161,163,165,
//   167,169,171,173,175,178,180,182,184,186,189,191,193,196,198,200,
//   203,205,207,210,212,215,217,220,222,225,227,230,232,235,237,240 };



// Source https://learn.adafruit.com/led-tricks-gamma-correction/the-quick-fix
// const byte gammaCorrection[] = {
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
//     0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  1,  1,  1,  1,
//     1,  1,  1,  1,  1,  1,  1,  1,  1,  2,  2,  2,  2,  2,  2,  2,
//     2,  3,  3,  3,  3,  3,  3,  3,  4,  4,  4,  4,  4,  5,  5,  5,
//     5,  6,  6,  6,  6,  7,  7,  7,  7,  8,  8,  8,  9,  9,  9, 10,
//     10, 10, 11, 11, 11, 12, 12, 13, 13, 13, 14, 14, 15, 15, 16, 16,
//     17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 24, 24, 25,
//     25, 26, 27, 27, 28, 29, 29, 30, 31, 32, 32, 33, 34, 35, 35, 36,
//     37, 38, 39, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 50,
//     51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68,
//     69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 85, 86, 87, 89,
//     90, 92, 93, 95, 96, 98, 99,101,102,104,105,107,109,110,112,114,
//     115,117,119,120,122,124,126,127,129,131,133,135,137,138,140,142,
//     144,146,148,150,152,154,156,158,160,162,164,167,169,171,173,175,
//     177,180,182,184,186,189,191,193,196,198,200,203,205,208,210,213,
//     215,218,220,223,225,228,231,233,236,239,241,244,247,249,252,255 };


}





